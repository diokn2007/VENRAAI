const config = {
  name: "atbd",
  aliases: ["atbd"],
  description: "Ch·ªëng ƒë·ªïi bi·ªát danh nh√≥m",
  usage: "on|off",
  cooldown: 3,
  isAbsolute:true,
  permissions: [2],
  credits: ""
};

const langData = {
  "vi_VN": {
     "notGroup": "L·ªánh n√†y ch·ªâ c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng trong nh√≥m!",
    "success": "B·ªë th√°ch ch√∫ng m√†y ƒë·ªïi bi·ªát danh ƒë√≥",
    "alreadyOn": "S√∫c v·∫≠t ƒëang b·∫•t l·ª±c k√¨a",
    "alreadyOff": "ƒêang t·∫Øt m√† em. On l√™n ü§£",
    "invalidCommand": "√ìc ch√≥ s√†i l·ªánh ki·ªÉu: "
  }
};

async function Running( {
  message, getLang, data
}) {
  if (!data?.thread?.info || !data.thread.info.isGroup) return message.reply(getLang("notGroup"));

  const [input] = message.body.split(" ").slice(1);
  if (!['on', 'off'].includes(input)) return message.reply(getLang("invalidCommand"));

  const _THREAD_DATA_ANTI_SETTINGS = {
    ...(data.thread.data?.antiSettings || {})
  };

  switch (input) {
    case 'on':
      if (_THREAD_DATA_ANTI_SETTINGS.antiChangeNickname) return message.reply(getLang("alreadyOn"));
      _THREAD_DATA_ANTI_SETTINGS.antiChangeNickname = true;
      await global.controllers.Threads.updateData(message.threadID, {
        antiSettings: _THREAD_DATA_ANTI_SETTINGS
      });
      return message.reply(getLang("success"));
    case 'off':
      if (!_THREAD_DATA_ANTI_SETTINGS.antiChangeNickname) return message.reply(getLang("alreadyOff"));
      _THREAD_DATA_ANTI_SETTINGS.antiChangeNickname = false;
      await global.controllers.Threads.updateData(message.threadID, {
        antiSettings: _THREAD_DATA_ANTI_SETTINGS
      });
      return message.reply(`M·ªát r·ªìi b·ªë ƒëi ng·ªß bye m·∫•y con ƒëƒ© n·ª©ng l·ªìn tinh tr√πng khuy·∫øt t·∫≠t`);
    default:
      return message.reply(getLang("invalidCommand"));
  }
}

export default {
  config,
  langData,
  Running
};